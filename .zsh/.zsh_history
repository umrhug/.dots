df -h
mount
which bash
which zsh
ls -la /bin/bash
ls -la /bin/zsh
ruby
ruby -V
ruby --version
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
clang
clang --version
pushd Workspace
mkdir -p Apps Docs Libs Projects Tutorials
pushd Projects
mkdir devz
which gcc
gcc --version
ids
id
echo $SHELL
ls /Library/Apple/bin
ls -l /Library/Appl
ls -l /Library/Apple
ls -l /Library/Application\ Support
ls -l /Library/Application\ Support/Apple
brew install pyenv
pyenv --version
touch .zshenv
chmod 600 .zshenv
xcode-select --install
man brew
PYENV_ROOT="`brew --prefix`/bin/pyenv"
ls /usr/local/bin/pyenb
ls /usr/local/bin/pyenv
ls -la /usr/local/bin/pyenv/
ls -la /usr/local/bin/pyenv/../libexec/pyenv
pushd `brew --prefix`/bin
pu pyenv
pushd pyenv
pushd ../Cellar/pyenv/1.2.13_1/bin/pyenv
pushd ../Cellar/pyenv/1.2.13_1/bin
pushd ../libexec
ls /usr/local/bin/pyenv/bin
ls /usr/local/bin/pyenv/
ls /usr/local/bin/pyenv/bin/
ls -l /usr/local/bin/
pyenv install --list
ls /usr/local/bin/versions
ls /usr/local/bin/
ls /usr/local/bin/shims
ls -l /usr/local/bin/shims
ls -l /usr/local/bin
ls -l /usr/
ls -l /usr/local
source .zshenv
pushd /usr/local/bin
rm -fr shims versions
ls .pyenv/versions
ls .pyenv/shims
ls /usr/local/bin
echo $PYENV_ROOT
history | grep -i pyenv
history | grep  pyenv
echo $HISTSIZE
set | grep -i HIST
cat .zsh_history| less
pyenv install 3.7.4
ls .pyenv
ls -lA
pyenv init -
type -a pyenv
which python3
python3 -V
mv .zshenv .zshrc
/usr/bin/python -V
/usr/bin/python3 -V
pyenv install --list | less
pyenv install 2.7.16
pyenv global 2.7.16 
/Users/umrhug/.pyenv/versions/3.7.4/bin/python -m pip install -U pylint
/Users/umrhug/.pyenv/versions/2.7.16/bin/python -m pip install -U "pylint<2.0.0"
pip install redis rq rsa 
pip version
pip --version
git clone https://github.com/Lora-net/LoRaMac-node.git
pushd LoRaMac-node
pushd cluster
touch ../devz/fabfile/fabfile.py
ln -s fabfile.py ../devz/fabfile/fabfile.py
ln -s  ../devz/fabfile/fabfile.py fabfile.py
pip install 'fabric<2.0'
brew 
which vim
vim 
alias ls='ls -CF'
ls -CFl
ls --color=auto
ls --show-color=auto
ls --version
ls -v
ls -V
ls -H
ls -L
ls -P
ls /etc
ls /etc/defaults
ls /etc/profile
ls -l /etc/profile
ls -l /etc/profile/
view /etc/profile
echo $BASH-no
set | grep BASH
set | grep -i bash
set
set | less
la -l | grep zsh
autoload -Uz colors
ls -CF
which colors
ls -a
ls -la | grep --color=auto zsh
ll -a | grep zsh
h -10
h -100
h -1000
h -10000 | grep colors
h -10000 | grep pip
h -100000 | grep pip
source .zshrc
cp .zshrc .zsh_aliases
command -v pyenv
command -v ppp
command -v pyenv >/dev/null 2>&1
which pyenv >/dev/null 2>&1
which tac
type -a tac
which pyen >/dev/null 2>&1
unalias ls
which-command --help
whence help
whence pyenv
man whence
whence --help
whence -h
man zshenv
info zshenv
echo $ZDOTDIR
head -10 .zshrc
head -10 .zshrc > .zshenv
pyenv
eval $PYENV_ROOT/pyenv init -
eval "$PYENV_ROOT/pyenv init -"
which pyenv
eval "$(pyenv init -)"
type -a python3
cp .zshrc .zshrc.darwin
head -10 .zshrc.darwin
head -10 .zshrc.darwin > .zprofile
zsh
type -a python
cat .zshrc
cat .zshrc.darwin
vim .zprofile
la -l | grep .zsh*
la -l | grep \.zsh*
la -l | grep \.zsh
la -l | grep \.zsh\*
la -l | grep ".zsh*"
l -a
touch .vimrc
vim ~/.vim/bundles.vim
mv .vim .vimfiles
ls -C
ls -F
ls -Fl
ls -Cl
colors
ls -A
ls -T
ls -Tl
ls -e
ls -el
view installer.sh
vim .vimfiles/bundles.vim
TextEdit .vimfiles/bundles.vim
open ~/.vimfiles/bundles.vim
man open
open -a TextEdit ~/.vimfiles/bundles.vim
ls .cache/dein
fc -l
brew search ctags
brew info ctags
brew install ctags
/usr/local/bin/ctags
/usr/local/bin/ctags --help
/usr/local/bin/ctags --help | less
. .zsh_aliases
which ctags
type -a ctags
h | grep vim
l t
vim t/installer.sh
pu src
find . -name (\*.c|\*.h)
find . -name \(\*.c|\*.h\)
find . -name "(*.c|*.h)"
find . -type f -name "*.c" -or -name "*.h"
find . -type f -name "*.c" -or -name "*.h" -print
ctags -f tags --extra+=f
ctags -f tags --extra=+f
ctags --help | less
ctags --list-lang=all
ctags --list-language=all
ctags -h
ctags --help
ctags --list-languages
ctags -f tags --extra=+f -R
view tags
code ..
vim .
brew search htop
brew install htop
which htop
type -a htop
which type
type -a which
which which
/usr/bin/which htop
brew --prefix
ps -ef
ps -ef | grep redis
la | grep -i \.zsh
la -l | grep -i \.zsh
file .zcompdump
view .zcompdump
lla
ll -A .cache
la | grep -i \.*
la | grep -i \.\*
man ls
ls -lrS
ls -l
vim .zshenv .zshrc .zshrc.darwin .zsh_aliases
mkdir .zsh
vim .zsh_aliases
vim .zshrc
mv .zshrc .zsh/
mv .zshrc.darwin .zsh/
mv .zsh_aliases .zsh/
mv .zsh_history .zsh/
cat .zsh_history
rm .zsh_history
cat .zcompdump
ls -la .zsh/
rm .zcompdump
ls -la .zsh
chmod600 .zprofile .zsh_aliases
chmod 600 .zprofile .zsh_aliases
vim .lesshst
la .cache/*
ll .cache/
ll .cache/dein
ll -A .cache/
ll -A .cache/dein
ll -A .cache/dein/.cache
ll -A .cache/dein/.cache/.vimrc
echo -e ${PATH://://\/
echo -e ${PATH://://\/}
echo -e ${PATH://://\/n}
echo -e ${PATH://:/\/n}
echo -e ${PATH://://}}
echo -e ${PATH://://}
echo -e ${PATH://\://}
echo -e ${PATH}|sed -e 's/:/\n/g'
echo -e ${PATH}|sed -e 's/:/\\n/'
echo -e ${PATH}|sed -e 's/:/\\n/g'
echo -e ${PATH}|sed -e 's/:/\'$'\n/g'
ls -G
ll -G
vim .zsh/.zshrc.darwin
source .zsh_aliases
pu Docs
pu Libs
echo -e ${PATH//:/\\n}
path
vim .vimr
pu Workspace/Projects/LoRaMac-node
pu Workspace/Tutorials/python3/
pu draw_graph
vim 4.simultaneous-program.py
pu Projects
pu LoRaMac-node
cat test.py
codesign -vd /usr/bin/vim
codesign -vd ~/.cache/dein/repos/github.com/Shougo/vimproc.vim/lib/vimproc_mac.so
codesign --force -s - ~/.cache/dein/repos/github.com/Shougo/vimproc.vim/lib/vimproc_mac.so
make -f make_mac.mak
make -f make_mac.mak all
view make_mac.mak
rm lib/vimproc_mac.so
make
ls lib
rm -fr vimproc.vim
cd ..
ls .cache
la .cache/.vimrc
vim .zsh/.zsh_aliases
source .zsh/.zsh_aliases
pu ~/.cache/dein/repos/github.com/Shougo/vimproc.vim
pu ~/.cache/dein/repos/github.com/Shougo
dir
cd
l algorithm
l algorithm/puzzle
l algorithm/puzzle/sec1
vim list1-0.py
vim list1-1.py
pyenv global 3.7.4
pyenv version
pu algorithm/puzzle/sec1
vim list2-0.py
l ..
l ../..
ls math
ls threading/
pu threading
vim thread-instance.py
vim sub-thread.py
pip install jedi
vim ~/.vimfiles/bundles.vim
vim ~/Workspace/Tutorials/python3/test.py
l Projects
pu Projects/cluster
vim main.py
find ~
cat .python-version
vim --version
pu .cache/dein/repos/github.com/davidhalter
rm -fr davidhalter
pu .cache/
vim cache_vim
vim state_vim.vim
pu repos
pu github.com
pu .vimfiles
pip uninstall jedi
pyenv shell 2.7.16
pip install -U pip
pip list | grep jedi
vim test.py
la ~
la ~/.vim
pu ~/.vim
rm .netrwhist
rm -fr .vim
la .config/htop/
ll -A
pu dein
pu .cache
vim .vimrc/merged
rm -fr .vimrc
mkdir t
curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > installer.sh
vim .vimrcc
rm -fr .cache
mkdir ~/.cache/dein
pu t
sh ./installer.sh ~/.cache/dein
vim Workspace/Tutorials/python3/test.py
rm -fr t
pu Workspace/Tutorials/atcoder
pu beginner-contest-128
pd
pu beginner-contest-129
ll *
pu a-airplane
rm .python-version
vi a.py
cp a1.txt input
fg
cp a2.txt input
vim a.p
vim a.py
nano .vimrc
nano ~/.vimrc
ls .pylint.d
ls .vscode/
cat .zshenv
ll Workspace/Projects/devz/fabfile/fabfile.py
ll Workspace/Projects/devz/fabfile/
ll Workspace/Projects/cluster
ll -G Workspace/Projects/cluster
vim ~/.vimrc
vim ~/.vimrc ~/.vimfiles/bundles.vim
mv .vimfiles .vim
vim ~/.vimrc ~/.vim/bundles.vim
pu Workspace/Tutorials/python3
mkdir contests
pu contests
touch disco-hiroshima.py
vim disco-hiroshima.py
code disco-hiroshima.py
/Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49370 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49384 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49389 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49403 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49417 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49432 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49437 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49441 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49447 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49452 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
/Users/umrhug/.pyenv/versions/3.7.4/bin/python -m pip install -U autopep8
cd /Users/umrhug/Workspace/Tutorials/python3/contests ; env PYTHONIOENCODING=UTF-8 PYTHONUNBUFFERED=1 /Users/umrhug/.pyenv/versions/3.7.4/bin/python /Users/umrhug/.vscode/extensions/ms-python.python-2019.10.44104/pythonFiles/ptvsd_launcher.py --default --client --host localhost --port 49467 /Users/umrhug/Workspace/Tutorials/python3/contests/disco-hiroshima.py
ifconfig
docker version
mkdir docker
clr
cls
clear
ps -ef | grep -i docker
view cheers.go
docker login
docker push peckr/cheers2019
mkdir test
pu test
docker pull peckr/cheers2019
rm -fr test
docker image
docker image inspect
ls -la .devcontainer
find .devcontainer
ls cheers2019
rm -fr .devcontainer
rm -fr .vsco
rm -fr .vscode
docker image rm 54e71dcafb7c
docker image rm help
docker image rm
docker image rm --help
docker image rm golang
docker image rm golang/1
docker images help
docker image help
docker image rm vsc-doodle-dcb0364cabafb5f3b70997c6a1eb6bc2
docker container prune
docker rmi help
docker rmi --help
docker rmi a2a866928a54
docker rmi 54e71dcafb7c
pu Workspace/Tutorials/docker
h | grep -i docker
docker run -it peckr/cheers2019
h -i
h -a
h -l
h --help
h -h
history
h|grep docker
docker help
docker info
ls birthday2019
pushd Workspace/Tutorials
h | grep -i clone
man history
man zsh
pu docker
h -E 1 | less
view README.md
cat README.md
docker build -t peckr/doodle:cheers2019
docker rmi e116d2efa2ab
docker logout
docker rmi 040536628700
docker container rm e973b3703397
docker container
docker container stop
docker image rm 040536628700
docker images ls
docker ps
docker containers
rm -fr doodle
h -E
h -E 1 | grep -i clone
git clone https://github.co/docker/doodle.git
git clone https://github.com/docker/doodle.git
pu doodle
docker build -t peckr/doodle:cheers2019 .
docker build -t peckr/doodle:doodle .
pu cheers2019
docker build -t peckr/cheers2019 .
docker run -it --rm peckr/cheers2019
ps
pu birthday2019
docker build -t peckr/birthday2019 .
docker run -it --rm peckr/birthday2019
pu halloween2019
docker build -t peckr/halloween2019 .
docker run -it --rm peckr/halloween2019
pu summer2019
docker build -t peckr/summer2019 .
docker run -it --rm peckr/summer2019
docker ls
docker image rmi 5673f6125d12
docker image rmi dd65dacadf7a
docker image rmi f6145d5eb11c
docker image ls
docker image rmi e7907ae2ad9a
docker image rmi 3024b4e742b0
docker image rmi e116d2efa2ab
docker container ls
h -E 1
h -E 1 | grep -i docker
git lone https://github.com/microsoft/vscode-remote-try-go.git
git clone https://github.com/microsoft/vscode-remote-try-go.git
pu Workspace/Tutorials/vscode/golang
pa
pu vscode-remote-try-go
docker image prune
docker image rmi 9a5187c81aa4
docker image rmi 54e71dcafb7c
docker images
which brew
brew help
brew doctor
brew list
brew install nodebrew
echo $NODEBREW_ROOT
which /usr/local/opt/nodebrew/bin/nodebrew
/usr/local/opt/nodebrew/bin/nodebrew -v
ll /usr/local/opt/nodebrew/bin/nodebrew
ll /usr/local/bin/nodebrew
ll /usr/local/bin/../Cellar/nodebrew/1.0.1/bin/nodebrew
view .zshenv
la .zsh
view .zshrc
virew .zprofile
view .zprofile
view ~/.zshenv
cat .zprofile
pu .zsh
vim .zshrc.darwin
echo $PTH
nodebrew setup
which nodebrew
which nodejs
nodebrew install-binary stable
nodejs -v
node -
nodebrew use stable
pu Tutorials
pu vscode
ls ../golang
mkdir first
~/.nodebrew/.bin/tsc.cmd --version
./node_modules/.bin/.tsc --version
npm run test
npm test
npm run webpack
open /Users/umrhug/.npm/_logs/2019-11-11T02_11_11_130Z-debug.log
npm cache clear --force
npm cache clean
npm install
npm install --no-bin-links
nodebrew list
nodebrew help
nodebrew ls-all | less
nodebrew install-binary v10.16.3
nodejs --version
./node_modules/.bin/
node --version
ls ./node_modules/.bin/
h -E 1 | grep -i install
npm cache clean --force
npm --save-dev typescript
rm tsconfig.json
rm webpack.config.js
npm install --save-dev webpack webpack-cli ts-loader
pu ../second
rm -fr node_modules
rm dist/index.js
pop
mkdir third
pu third
nodebrew use v10.16.3
npm install --save-dev typescript webpack webpack-cli ts-loader
touch webpack.config.js
vim webpack.config.js
vim package.json
cp ../second/index.html ./
mkdir ts dist
cp ../second/ts/*.ts ./ts/
rm -fr third
nodebrew -v
nodebrew --version
nodebrew use v12.13.0
pu Workspace/Tutorials/vscode
s
pu first
touch main.ts
vim main.ts
tsc main.ts
./node_modules/.bin/tsc main.ts
vim main.js
find node_modules
find node_modules | wc -l
./node_modules/.bin/tsc --init
vim tsconfig.json
ls *
rm dist/main.js
npm install --save @types/node
cat package-lock.json
npm run tsx
node ./dist/main.js
cat dist/main.js
vim dist/main.js
node
node main
node main.js
ll -h
ds
du
df
l vscode
l *
pu python3
pyenv versions
which python
python -v
python --help | grep -i
python --help | less
pu vscode/typescript
./node_modules/.bin/tsc --version
h | grep main.js
tsc dist/main.js
./node_modules/.bin/tsc dist/main.js
node dist/main.js
npm run
ll ./node_modules/.bin/
ll ./node_modules/typescript/bin/
ll ./node_modules/typescript/lib
ll ./node_modules/typescript/loc
mkdir typescript
pu typescript
npm install --help
npm install typescript
npm install typescripts
npm install --save-dev typescript @types/typescript
npm install --save-dev typescripts
npm init
npm install --save-dev typescript
cat ~/.npm/_logs/2019-11-12T08_57_09_911Z-debug.log
node -v
pu Workspace/Tutorials/typescript
rm *
rm -fr dist src
popd
pu Workspace/Tutorials/
mv typescript ts
rm package.json
npx tsc --version
npm install --save-dev ts-node
npm install --save-dev ts-node-dev
npx ts-node-dev --respawn src/index.ts
ls dist
rm dist/*
ll dist/
npm run start
ls dist/
ls dist/*
tsc
npx tsc
npx dev
ls src/
npm run dev:watch
vim
vim ~/.zsh/.zshrc.darwin
which node
which npx
which npm
echo %PATH
ifconfig | grep -i inet
ifconfig | grep -i inet\ 
seq 1 10
echo $PATH
npm tsc
npm ./dist/index.js
npm -l
h -E 1 | grep -i "npm install"
h -E 1 | grep -i "npx"
h -E | less
h 1 | less
h
which hgrep
npm help
npm help start
npm help test
npm start help
node help
node --help
node --help | less
man ts-node
ts-node --help | less
ts-node --help
ts-node -h
ts-node help
file `which ts-node`
which ts-node
npx uninstall ts-node
npm uninstall ts-node
pu .npm_
pu .npm/
l _npx
pu _npx
ls ..
rm package-lock.json
ls .npm
ls .npm/_locks
ls .npm/_cacache
ll .npm/_cacache/content-v2
ll .npm/_cacache/index-v5
ll .npm/_cacache
ll .npm/tmp
ll .npm/_cacache/tmp
pu Workspace/Tutorials/ts
npx ts-node
npx ts-node dist/index.js
cat package.json
ts-node src/index.ts
npx ts-node src/index.ts
npx
date
ll -a
pu .config
la .vscode/extensions
la .vscode/extensions/rid9.datetime-1.0.5
pu .vscode/extensions/rid9.datetime-1.0.5
less README.md
ls images
ls out
ls out/src/configuration.js
less out/src/configuration.js
rm .ts_node_repl_history
cat .node_repl_history
rm .node_repl_history
cat .lesshst
less .vscode/argv.json
for n in `seq 1 10`\
do\
sleep 1\
ifconfig | grep -i inet\ \
done
pu Workspace/Tutorials
ls ts
mv ts ts-d
mkdir ts
mkdir hello
git init .
pu ts-d
node --init
h 1 | grep init
npm init -y
h 1 | grep npm
cat ReadMe.md
npm install --save-dev typescript @types/node
nodebrew
nodebrew ls
npm --version
npx --version
npx tsc --init
npm install --save-dev ts-node ts-node-dev
npm install --save-dev rimraf npm-run-all
git help
git help add
git add ReadMe.md
git commit -m "Register ReadMe.md which describes the procedure of TypeScript development environment."
git add node_modules
git commit -m "Install Node module required for TypeScript development environment, the following: TypeScript, @types/node, ts-node, ts-node-dev, rimraf, npm-run-all."
git show
git add package.json
git commit -m "Adds the package.json which created by 'npm init -y' and updated by 'npm install ...'."
less package-lock.json
git add package-lock.json
git commit -m "Adds a file which manages the version and conflict for Node module."
git add tsconfig.json
git commit -m "Adds default tsconfig.json created by the command 'npx tsc --init'."
git status
mkdir dist src
ls src
less src/index.ts
less tsconfig.json
npm run dev
npm run build
npx dist/index.js
node dist/index.js
npm run clean
npm run tsc
npm start
..
rm -fr ts-d
pu ts
pu hello
touch decorator.py
code .
pyenv shell 3.7.4
python decorator.py
h 1 | grep -i jyu
jyupter .
jupyter
pip list | grep -i ju
pip list | less
which pio
which pip
python -V
pip install jupyter
jupyter notebook --notebook-dir=.
dirs
pu ..
jupyter notebook --notebook-dir=decorator
jupyter notebook --notebook-dir=./decorator
ps -ef | grep -i jupyter
pu Workspace/Tutors/python
pu decorator
rm Untitled.ipynb
rm -fr __pycache__
rm -fr .ipynb_checkpoints
pu Workspace/Tutors
mkdir notebook
jupyter notebook ./notebook
pu Workspace
pu Tutors/python
pu notebook
pu Tutors
pu python
rm -fr notebook
ll la
pu /Volumes/usb_flash
pu job\ career
find .
htop
pwd
mkdir .dots
l Workspace
l Workspace/Libs
ln -s
ln -s a .zsh
ln -s .zsh a
l
rm a
mv .zshenv .dots/
ln -s .dots/.zsh ~/.zsh
ll -la
alias
vim .zshenv
mkdir .bin
touch installer.sh
vim installer.sh
pu.bin
pu .bin
chmod u+x installer.sh
ll
pod
mkdir -p .dots_backup
mkdir .vim
la .config
la .vscode
la .vim
la .cache
view .vim/bundles.vim
vim .vimrc
ls .dots
la .dots/.vim
la -l .dots/.vim
la -l .vim/
ls .dots/.bin
mv .dots/.bin .
la -1
la .dots
rm .vim
rmdir .vim
rm ../.zsh
mv .zsh ../
la ..
la -l ..
rm ../.zshenv
mv .zshenv ../
git clone https://github.com/umrhug/.dots.git
la
pu .dots
mv .zsh .dots/.zsh
mv .zsh .dots/
cp -R .zsh .dots/
po
la -l
mv .zsh .dots
mv .zshenv .dots
ls
la -l .dots
mv .bin .dots/
la .dots/
la -l .dots/
ln -s .zshenv .dots/.zshenv
ln -s .dots/.zshenv .zshenv
ln -s .dots/.zsh .zsh
ls -la
: 1575453438:0;alias
: 1575453450:0;mv .vim .dots
: 1575453459:0;ln -s .dots/.vim .vim
: 1575453460:0;ls -la
: 1575453499:0;mv .vimrc .dots
: 1575453514:0;ln -s .dots/.vimrc .vimrc
: 1575453517:0;ll
: 1575453520:0;ll -A
: 1575453527:0;vim
: 1575453573:0;pu .dots
: 1575453579:0;la -l
: 1575453743:0;git status
: 1575453759:0;git add .zsh
